{"version":3,"sources":["images/galaxy2.jpg","images/rainbow.jpg","pages/Home.jsx","store/actions/breachActions.js","cmps/NavBar.jsx","cmps/BreachDetails.jsx","App.js","serviceWorker.js","store/reducers/breachReducer.js","store/store.js","index.js"],"names":["module","exports","Home","props","useState","breaches","setBreaches","hoveredDiv","setHoveredDivIdx","currPage","setCurrPage","localStorage","getItem","theme","setTheme","dispatch","useDispatch","onLeave","onPagination","diff","onBreach","currBreach","breach","setItem","JSON","stringify","type","history","push","useEffect","a","axios","get","headers","breachesToReturn","data","items","console","log","fetchBreaches","className","onClick","style","marginLeft","backgroundColor","backgroundImage","galaxy","rainbow","map","idx","key","onMouseEnter","onHover","onMouseLeave","width","src","LogoPath","Title","BreachDate","marginBottom","letterSpacing","transform","color","margin","NavBar","padding","Component","connect","state","withRouter","BreachDetails","useSelector","setCurrBreach","keyValueArr","breachInLocalStorage","parse","marginRight","Name","goBack","moment","AddedDate","format","DataClasses","Domain","IsFabricated","IsRetired","IsSensitive","IsSpamList","IsVerified","window","open","ModifiedDate","PwnCount","dangerouslySetInnerHTML","__html","Description","App","component","path","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5cae8360.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/galaxy2.d8902721.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainbow.19bda207.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { setCurrBreach } from '../store/actions/breachActions'\r\nimport axios from 'axios';\r\nimport galaxy from '../images/galaxy2.jpg'\r\nimport rainbow from '../images/rainbow.jpg'\r\n\r\nfunction Home(props) {\r\n    const [breaches, setBreaches] = useState([])\r\n    const [hoveredDiv, setHoveredDivIdx] = useState(null)\r\n    const [currPage, setCurrPage] = useState(0)\r\n    const [theme , setTheme] = \r\n    useState(localStorage.getItem('preferedTheme')? localStorage.getItem('preferedTheme') : 'dark')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchBreaches() {\r\n            try {\r\n                const breaches = await axios.get(`https://guard.io/v2/hiring/fe/breaches?offset=${currPage*10}`,\r\n                    {\r\n                        headers: {\r\n                            'X-Best-Pokemon': 'pikachu'\r\n                        }\r\n                    })\r\n                let breachesToReturn = breaches.data.items\r\n                setBreaches(breachesToReturn)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchBreaches()\r\n\r\n    }, [currPage])\r\n\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('preferedTheme' , theme)\r\n    }, [theme])\r\n\r\n\r\n    function onHover(idx) {\r\n        setHoveredDivIdx(idx)\r\n    }\r\n\r\n    function onLeave() {\r\n        setHoveredDivIdx(null)\r\n    }\r\n\r\n    function onPagination(diff) {\r\n        if(currPage === 46 && diff === 1) return\r\n        if (!currPage && diff === (-1)) return\r\n        setCurrPage(currPage => currPage + (diff))\r\n    }\r\n\r\n    function onBreach(currBreach){\r\n        dispatch(setCurrBreach(currBreach))\r\n        props.history.push('/breach-details')\r\n    }\r\n\r\n    function onToggleTheme(){\r\n        theme === 'dark'? setTheme('light') : setTheme('dark')\r\n        \r\n    }\r\n\r\n    return (\r\n            <main className=\"home-container text-center container\">\r\n                <h4>Breaches List</h4>\r\n                <span className=\"toggle-container flex align-center\" onClick={onToggleTheme}>\r\n                    <span style={{\r\n                        marginLeft:`${theme === 'light'? 'auto' : ''}`,\r\n                        backgroundColor: `${theme === 'light'? '#04bdda' : ''}`\r\n                        }} className=\"toggle-btn\"></span>\r\n                </span>\r\n                <div className=\"breaches-container flex column align-center\" \r\n                style={{backgroundImage:`${(theme === 'dark')? `url(${galaxy})` : `url(${rainbow})` }`}}>\r\n\r\n                    {breaches.map((breach, idx) => {\r\n                        return <div className={`breach-item flex align-center ${theme === 'light'? 'light' : ''}`}\r\n                        \r\n                            key={idx} onMouseEnter={() => onHover(idx)} onMouseLeave={onLeave} onClick={() => onBreach(breach)}>\r\n                            <img style={{ width: \"30px\" }} className=\"breach-logo\" src={breach.LogoPath} />\r\n                            <h5>{breach.Title}</h5>\r\n                            <p>{breach.BreachDate}</p>\r\n                            {(hoveredDiv === idx) && <span style={{marginLeft:\"auto\"}} className={`spin-entrance ${theme === 'dark'? 'right-arrow' : 'right-arrow-black'}`}/>}\r\n                        </div>\r\n                    })}\r\n                    <div className=\"breach-item flex align-center space-between\">\r\n                        <h3 className=\"fs18\" style={{ marginBottom: \"0px\", letterSpacing: \"1px\" }}>Current Page </h3>\r\n                        <div className=\"flex align-center\">\r\n                            {currPage > 0 && <span style={{ transform: \"rotate(180deg)\" }} className=\"pagination-next\" onClick={() => onPagination(-1)} />}\r\n                            <h3 className=\"fs18\" style={{ color: \"#04bdda\", margin: \" 0px 5px\" }}>{currPage + 1}</h3>\r\n                            <span className=\"pagination-next\" onClick={() => onPagination(+1)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","\r\nexport function setCurrBreach(breach) {\r\n    let breachToSet ;\r\n\r\n    // console.log(JSON.parse(localStorage.getItem('currBreach')));\r\n    \r\n    // if(JSON.parse(localStorage.getItem('currBreach')).Name === breach.Name)\r\n\r\n    localStorage.setItem('currBreach' , JSON.stringify(breach))\r\n    return dispatch => {\r\n        return dispatch({ type: 'SET_BREACH', breach })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <nav style={{padding:\"0px 30px\"}} className=\"nav-content-wrapper flex column align-center justify-center\">\r\n                <h2>im nav bar!</h2>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n    const mapDispatchToProps = {  \r\n\r\n    }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\n\r\nfunction BreachDetails(props) {\r\n    let breach = useSelector(state => state.breach.currBreach)\r\n    const [currBreach, setCurrBreach] = useState(null)\r\n    const [keyValueArr, setKeyValueArr] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (breach) {\r\n            setCurrBreach(breach)\r\n        }\r\n        else {\r\n            let breachInLocalStorage = JSON.parse(localStorage.getItem('currBreach'))\r\n            setCurrBreach(breachInLocalStorage)\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n    }, [keyValueArr])\r\n\r\n    function createMarkup() {\r\n        return {\r\n            __html: currBreach.Description\r\n        }\r\n    }\r\n\r\n    if (!currBreach) return 'Loading Stats...'\r\n    return (\r\n        <div className=\"breach-details-container flex column align-center\">\r\n            <div className=\"flex align-center\">\r\n                <h4 style={{ marginBottom: \"0px\", marginRight: \" 20px\" }}>Details for breach: <span style={{ color: \"#04bdda\" }}>{currBreach.Name}</span></h4>\r\n                <button className=\"backBtn\" onClick={() => props.history.goBack()}>Back to List</button>\r\n            </div>\r\n            <div className=\"breach-data-container flex align-center space-between\">\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>Name: <span className=\"content\">{currBreach.Name}</span> </h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>Title: <span className=\"content\">{currBreach.Title}</span> </h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>AddedDate: <span className=\"content\">{moment(currBreach.AddedDate).format(\"YYYY-MM-DD\")}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>BreachDate: <span className=\"content\">{currBreach.BreachDate}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>DataClasses: <span className=\"content\">{currBreach.DataClasses[0], currBreach.DataClasses[1]}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>Domain: <span className=\"content\">{currBreach.Domain}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>IsFabricated: <span className=\"content\">{currBreach.IsFabricated ? 'Yes' : 'No'}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>IsRetired: <span className=\"content\">{currBreach.IsRetired ? 'Yes' : 'No'}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>IsSensitive: <span className=\"content\">{currBreach.IsSensitive ? 'Yes' : 'No'}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>IsSpamList: <span className=\"content\">{currBreach.IsSpamList ? 'Yes' : 'No'}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>IsVerified: <span className=\"content\">{currBreach.IsVerified ? 'Yes' : 'No'}</span></h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>LogoPath: <span className=\"content pointer\" onClick={() => window.open(`${currBreach.LogoPath}`)}>Show Logo</span> </h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\">\r\n                    <h5>ModifiedDate: <span className=\"content\">{moment(currBreach.ModifiedDate).format(\"YYYY-MM-DD\")}</span> </h5>\r\n                </div>\r\n\r\n                <div className=\"brech-item\" style={{ marginRight: \"auto\" }}>\r\n                    <h5>PwnCount: <span className=\"content\">{currBreach.PwnCount}</span> </h5>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"desc-container flex column text-center\">\r\n                <div style={{ marginBottom: \"15px\" }} className=\"desc-header flex align-center\">\r\n                    <img style={{ width: \"30px\", marginRight: \"15px\" }} src={currBreach.LogoPath} />\r\n                    <h4 style={{ marginBottom: \"0px\" }}>{currBreach.Name}</h4>\r\n                </div>\r\n                <p style={{ marginBottom: \"10px\", color: \"#04bdda\" }}>More to know:</p>\r\n                <div dangerouslySetInnerHTML={createMarkup()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BreachDetails\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home.jsx'\r\nimport NavBar from './cmps/NavBar.jsx'\r\nimport BreachDetails from '../src/cmps/BreachDetails'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app-container flex column align-center\">\r\n      {/* <NavBar /> */}\r\n        <Switch>\r\n          <Route component={BreachDetails} path=\"/breach-details\" />\r\n          <Route component={Home} path=\"/\" />\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    currBreach: null\r\n}\r\n\r\nexport function breachReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        \r\n        case 'SET_BREACH':\r\n\r\n            return {\r\n                ...state,\r\n                currBreach: action.breach\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { breachReducer } from './reducers/breachReducer'\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n        breach: breachReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/store.js';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}